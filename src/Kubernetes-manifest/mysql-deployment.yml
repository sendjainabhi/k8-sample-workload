apiVersion: v1
kind: PersistentVolume            # PersistentVolume to stode data
metadata:
  name: mysql-pv
  labels:
    type: local
spec:
  storageClassName: standard      
  capacity:
    storage: 250Mi
  accessModes:
    - ReadWriteOnce
  hostPath:                       # hostPath PersistentVolume
    path: "/mnt/data"
  persistentVolumeReclaimPolicy: Retain  # Retain the PersistentVolume even after PersistentVolumeClaim is deleted.
---    
apiVersion: v1
kind: PersistentVolumeClaim        # Create a PersistentVolumeClaim to request a PersistentVolume storage
metadata:                          
  name: mysql-pv-claim
  labels:
    app: mysql-app
spec:                              # Access mode and resource limits
  storageClassName: standard       
  accessModes:
    - ReadWriteOnce                # ReadWriteOnce - volume can be mounted as read-write by a single Node
  resources:
    requests:
      storage: 250Mi        #mount disk sixe 250 MB
---
apiVersion: v1                    # API version
kind: Service                     # Type of kubernetes resource  -My-sql service 
metadata:
  name: mysql-service         # Name of the resource
  labels:                       
    app: mysql-app
spec:
  ports:
    - port: 3306
  selector:                       # Selects any Pod with labels `app=mysql-app,tier=mysql`
    app: mysql-app
    tier: mysql
  clusterIP: None
---
apiVersion: apps/v1
kind: Deployment                    # Type of the kubernetes resource
metadata:
  name: mysql-service           # Name of the deployment
  labels:                           
    app: mysql-app
spec:
  selector:
    matchLabels:                    # This deployment applies to the Pods matching the specified labels
      app: mysql-app
      tier: mysql
  strategy:
    type: Recreate
  template:                         # Template for the Pods in this deployment
    metadata:
      labels:                      
        app: mysql-app
        tier: mysql
    spec:                           # The spec for the containers that will be run inside the Pods in this deployment
      containers:
      - image: mysql:5.6            # The container image - my-sql version 5.6
        name: mysql
        env:                        # Environment variables passed to the container 
        - name: MYSQL_ROOT_PASSWORD 
          valueFrom:                # Read environment variables from kubernetes secrets
            secretKeyRef:
              name: mysql-root-pass # mysql root password env var from secrets
              key: password
        - name: MYSQL_DATABASE     
          valueFrom:
            secretKeyRef:
              name: mysql-db-url   #mysql DB url  env var from secrets
              key: database
        - name: MYSQL_USER      #mysql db usr env var from secrets
          valueFrom:
            secretKeyRef:
              name: mysql-user-pass      #mysql db password env var from secrets
              key: username
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-user-pass
              key: password
        ports:
        - containerPort: 3306        # The port that the container exposes = 3306   
          name: mysql
        volumeMounts:
        - name: mysql-persistent-storage  # This name should match the name specified in `volumes.name`
          mountPath: /var/lib/mysql
      volumes:                       # A PersistentVolume is mounted as a volume to the Pod  
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-pv-claim